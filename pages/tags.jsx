import { PCCConvenienceFunctions } from "@pantheon-systems/pcc-react-sdk";
import { useSetAtom } from "jotai";
import { NextSeo } from "next-seo";
import Image from "next/image";
import { useEffect } from "react";
import { PostGrid } from "../components/grid";
import Layout from "../components/layout";
import { searchQueryAtom } from "../components/searchbar";
import { Tags } from "../components/tags";

export default function TagSearch({ articles, tags, searchString }) {
  const setSearchQuery = useSetAtom(searchQueryAtom);

  useEffect(() => {
    setSearchQuery(searchString);
    // Don't include searchString as a hook dependency because we only
    // want to update it when this component initially mounts.
  }, [setSearchQuery]); // eslint-disable-line react-hooks/exhaustive-deps

  const HomepageHeader = () => (
    <div className="flex flex-col mx-auto mt-20 prose sm:prose-xl max-w-fit">
      <h1 className="h-full text-4xl prose text-center">
        Welcome to&quot;
        <a
          className="text-blue-600 no-underline hover:underline"
          href="https://nextjs.org"
        >
          Next.js!
        </a>
      </h1>
      <div className="text-2xl">
        <div className="flex items-center justify-center p-4 text-white bg-black rounded">
          Decoupled PCC on{" "}
          <Image
            src="/pantheon.png"
            alt="Pantheon Logo"
            style={{
              margin: 0,
            }}
            width={191}
            height={60}
          />
        </div>
      </div>
    </div>
  );

  return (
    <Layout>
      <NextSeo
        title="Decoupled Next PCC Demo"
        description="Generated by create-pantheon-decoupled-kit."
      />
      <HomepageHeader />
      {searchString.trim().length ? (
        <>
          {" "}
          <h3 className="mt-4 text-3xl text-center">
            Article with tag &quot;{searchString}&quot;
          </h3>
          <section>
            <PostGrid contentType="posts" data={articles} />
          </section>
        </>
      ) : null}
      <div className="max-w-screen-lg mt-16 mx-auto">
        <h3>Site-wide</h3>
        <Tags tags={tags} />
      </div>
    </Layout>
  );
}

export async function getServerSideProps({ query }) {
  const [articles, tags] = await Promise.all([
    PCCConvenienceFunctions.getAllArticles(
      {
        publishingLevel: "PRODUCTION",
      },
      {
        tagContains: query.q,
      },
    ),
    PCCConvenienceFunctions.getTags(),
  ]);

  return {
    props: {
      articles,
      tags,
      searchString: query.q || "",
    },
  };
}
